#!/bin/sh
# vi: ft=sh

set -euxo pipefail

########################################################################

redirect_log() {
    local fifo=$HOME/.xsession-errors-fifo
    rm -f "$fifo"
    mkfifo -m 0600 "$fifo"
    flog -t -T "%F %T " -l $((1024*1024)) -z $HOME/.xsession-errors < "$fifo" &
    exec >"$fifo" 2>&1
    rm -f "$fifo"
}

warn() {
    echo "WARN: $1" >&2
    { i3-nagbar -f "pango:@@LATIN_MONO_FONT@@,monospace 12" -t warning -m "~/.xsession: $1 Please check ~/.xsession-errors." & } || true
}

failsafe() {
    { sleep 1; twm; } &
    xmessage -center 'Check ~/.xsession-errors, fix ~/.xsession, exit the first xterm to quit.' &
    exec xterm -ls -T Failsafe -geometry 80x24+0+0
}

export_env_vars() {
    export LANG=en_US.UTF-8
    export LC_CTYPE=zh_CN.UTF-8
    export XMODIFIERS=@im=fcitx
    export GTK_IM_MODULE=fcitx
    export QT_IM_MODULE=fcitx

    export MANWIDTH=tty
    export CLICOLOR=1

    : ${XDG_DATA_HOME:=$HOME/.local/share}
    : ${XCURSOR_PATH:=/usr/local/share/icons}
    export XCURSOR_PATH="$XCURSOR_PATH:$XDG_DATA_HOME/icons"
    export XCURSOR_THEME=@@CURSOR_THEME@@
    export XCURSOR_SIZE=@@CURSOR_SIZE@@

    # affect i3-sensible-terminal
    [ "${TERMINAL:-}" ] || for term in urxvtcd mlterm lxterminal uxterm xterm; do
        which -s $term && export TERMINAL=$term && break
    done
}

init_xserver() {
    ## It's said xrandr should be run before loading ~/.Xresources, https://wiki.archlinux.org/index.php/Cursor_themes#Cursor_size_doesn't_change_on_startup
    xrandr

    local resources=$HOME/.Xresources
    [ -r "$resources" ] && xrdb -load "$resources"

    ## set default cursor, https://wiki.archlinux.org/index.php/Cursor_themes#Change_X_shaped_default_cursor
    xsetroot -cursor_name left_ptr

    ## prepend user fonts, use `xset q` to check X font paths
    #[ -e "$XDG_DATA_HOME/fonts/fonts.dir" ] && xset +fp "$XDG_DATA_HOME/fonts"
}

start_fcitx() {
    fcitx

    local i=0
    while [ $((i+=1)) -le 100 ]; do
        sleep 0.1
        fcitx-remote >/dev/null 2>&1 && break
    done
}

start_vm_tools() {
    local MACHINE

    ## detect virtual machine
    case `kenv -q smbios.system.maker`/`kenv -q smbios.system.product` in
        *VirtualBox*) MACHINE=vbox ;;               # innotek GmbH/VirtualBox
        *VMware*) MACHINE=vmware ;;                 # VMware, Inc./VMware Virtual Platform
        *Microsoft*Virtual*) MACHINE=hyperv ;;      # Microsoft Corporation/Virtual Machine
        *) MACHINE=physical ;;
    esac

    ## start /usr/local/etc/xdg/autostart/vboxclient.desktop
    ## https://bugs.freebsd.org/bugzilla/buglist.cgi?query_format=advanced&short_desc=VBoxClient&short_desc_type=allwordssubstr
    vboxclient=/usr/local/bin/VBoxClient
    if [ $MACHINE = vbox -a -x $vboxclient-all ]; then
        sed -e "s|/usr/bin/VBoxClient|$vboxclient|g" $vboxclient-all | sh || warn "$vboxclient-all failed!"
    fi

    ## start /usr/local/etc/xdg/autostart/vmware-user.desktop
    ## https://github.com/vmware/open-vm-tools/issues/150
    vmware_user=/usr/local/bin/vmware-user-suid-wrapper
    if [ $MACHINE = vmware -a -x $vmware_user ]; then
        $vmware_user || warn "$vmware_user failed!"
    fi
}


########################################################################

## redirect log to ~/.xsession-errors
redirect_log

## export some environment variables
export_env_vars

## fallback to xterm if anything goes wrong
trap failsafe EXIT SIGHUP SIGINT SIGPIPE SIGTERM SIGIO

## load ~/.Xresources and set default cursor
init_xserver

## start VirtualBox/VMWare helper tools
start_vm_tools

## start xsettingsd
{ xsettingsd & } || warn "xsettingsd failed!"

## start X compositing manager
picom -b || warn "picom failed!"

## start Fcitx and wait for it, or Ctrl-Space may not work
start_fcitx

## start Pulse Audio
#start-pulseaudio-x11 || warn "Pulse Audio failed!"

## slim doesn't use login mode for /bin/sh
set +euo pipefail
[ -e $HOME/.profile ] && . $HOME/.profile
[ -e $HOME/.xprofile ] && . $HOME/.xprofile
set -euo pipefail

## start window manager
: ${XSESSION:=${1:-}}
which -s "$XSESSION" || exec i3     # awesome openbox-session icewm-session wmaker fvwm
exec "$XSESSION"

